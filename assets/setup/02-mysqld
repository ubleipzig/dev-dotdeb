#!/bin/bash
# creates default mysql database if not exists

## work in progress to source out mysql. not yet functional
DB_TYPE=${DB_TYPE:-mysql}
DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-3306}
DB_POOL=${DB_POOL:-10}
DB_ROOT=${DB_ROOT:-root}
DB_PASS=${DB_PASS:-}

# fix permissions and ownership of /var/lib/mysql
test -d /var/lib/mysqld || mkdir -p -m 700 /var/lib/mysql
chown -R mysql:mysql /var/lib/mysql

# fix permissions and ownership of /var/run/mysqld
test -d /var/run/mysqld || mkdir -p -m 0755 /var/run/mysqld
chown -R mysql:root /var/run/mysqld
# initialize MySQL data directory
if [ "${DB_HOST}" == "localhost" ]; then
	if [ ! -d /var/lib/mysql/mysql ]; then
		echo "Installing database..."
		mysql_install_db --user=mysql >/dev/null 2>&1

		# start mysql server
		echo "Starting MySQL server..."
		/usr/bin/mysqld_safe >/dev/null 2>&1 &

		# wait for mysql server to start (max 30 seconds)
		timeout=30
		while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
		do
		    timeout=$(($timeout - 1))
		    if [ $timeout -eq 0 ]; then
		        echo "Could not connect to mysql server. Aborting..."
		        exit 1
		    fi
		    echo "Waiting for database server to accept connections..."
		    sleep 1
		done

		## create a localhost only, debian-sys-maint user
		## the debian-sys-maint is used while creating users and database
		## as well as to shut down or starting up the mysql server via mysqladmin
		echo "Creating debian-sys-maint user..."
		mysql -uroot -e "CREATE USER 'debian-sys-maint'@'localhost' IDENTIFIED BY '';"
		mysql -uroot -e "GRANT ALL PRIVILEGES on *.* TO 'debian-sys-maint'@'localhost' WITH GRANT OPTION;"

        echo "Granting root permission from Docker Host ..."
        mysql -uroot -e "CREATE USER root@${DOCKERHOST};"
        mysql -uroot -e "GRANT all PRIVILEGES on *.* to root@${DOCKERHOST} WITH GRANT OPTION;"

        echo "Setting root user password"
		/usr/bin/mysqladmin -u root password "${DB_PASS}"

        /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
	fi

	if [ "${SQL_MODE}" != "" ];then
		echo "Setting up custom sql_mode ..."
		cat >/etc/mysql/conf.d/sqlmode.cnf <<EOF
[mysqld]
sql_mode = ${SQL_MODE}
EOF
	fi;

	echo "Setting up MySQL-Server for autostart ..."

	cat > /etc/supervisor/conf.d/mysqld.conf <<EOF
[program:mysqld]
priority = 20
directory = /tmp
command = /usr/sbin/mysqld --console
autostart = true
autorestart = true
redirect_stderr = true
stdout_logfile = ${LOG_DIR}/supervisor/supervisord.log
EOF

fi;

